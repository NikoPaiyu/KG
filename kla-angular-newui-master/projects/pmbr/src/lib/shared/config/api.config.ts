
export const ApiConfig = {
  pmbrBasePathExt: ":8044/kla/service/v1/pmbr",
  billBasePathExt: ":8044/kla/service/v1/bill",
  schedule: {
    create: '/schedule',
    view: '/schedule/list',
    viewById: '/schedule/',
    getScheduleByAssemblyandSession: '/schedule/getBySessionAndAssembly',
    getOwnNoticesList: '/schedule/lotting/resolution/getAllResultForUser',
    presentation: '/schedule/lotting/getActivePresentationDates'
  },
  pmbrBill: {
    getBills: '/bill',
    create: '/bill/create',
    createBlock: '/bill/createBlock',
    updateBlock: '/bill/updateBlock',
    deleteBlock: '/bill/deleteBlockById?id=',
    getBlockById: '/bill/getSubBlockById?blockId=',
    createFile: '/file/createFile',
    file: '/createFile',
    submit: '/bill/submit',
    getDepartmentCode: '/bill/getBillDepartment'
  },
  notice: {
    saveNotice: '/bill/notice/save',
    getNoticeById: '/bill/notice/getNoticeById'
  },
  basePathCreateFile: ":8044/kla/service/v1/bill",
  basePathFile: ":8078/kla/service/v1/files",
  basePathBulletinFile: ":8078/kla/service/v1/bulletin",
  basePathReg: ":8089/kla/service/v1/departmentMangement",
  basePathNotification: ":8066/kla/service/v1/notification",
  basePathCorrespondence: ":8066/kla/service/v1/correspondence",
  basePathCommittee: ":8055/kla/service/v1/committee",
  priorityList: {
    save: "/priorityList",
    delete: "/priorityList",
    submit: "/priorityList/submit",
    listAll: "/priorityList/all",
    submittedList: "/priorityList/submitted",
    getById: "/priorityList",
    categories: "/priorityList/category/all",
    listRequestAll: "/priorityList/request/list",
    submitPrioritylistRquest: "/priorityList/request",
    priorityListByAssemblySession: "/priorityList/by",
    sendPriorityListRequestResponse: "/priorityList/sendList",
    setInitialDays: '/priorityList/initial/dates',
    schedule: '/schedule',
    scheduleList: '',
    addCOS: '/priorityList/request/addCos'
  },
  billRegister: {
    addToRegister: "/",
    list: "",
    view: "",
  },
  bulletin: {
    create: "/bulletin",
    publish: "/publish",
    list: "/bulletin/pmbr/list",
    approvedList: "/bulletin/list/approved",
    publishedList: "/bulletin/list/published",
    view: "/bulletin",
  },
  erratum: {
    request: "/",
    list: "",
    view: "",
  },
  //old below - can be reused wherever required
  uploadFile: ":8088/file/uploadImage",
  portfolio: "mock/portfolio",
  department: "mock/subject",
  files: {
    create: "/file/createRegistrationList",
    list: "/all",
    approved: "/getAll",
    workFlowUsers: "/getWorkflowActionUsers",
    pendingFilesForUser: "/dashBoard/user",
    pendingFilesForSection: "/dashBoard/section",
    aaprovedByHigherOfficial: "/all/ownerId",
    changeSubmitStatus: "/document/submitDocument",
    addAttachment: "/addAttachment",
    statusUpdate: "/update/status",
    ratification: "/file/ratification/pending",
    getAll: "/file/getAll",
    getPending: "/file/getAllPending",
    speakerNote: '/file/getSpeakerNote',
    getFilebyId: "/file/getByFileId"
  },
  notification: {
  },
  notes: {
    create: "",
    list: "",
  },
  currespondenceTemplate: {
    getAllWorkFlow: "/template/workflow/type",
    getTypeBySection: "/getAll",
    getAllInputType: "/template/inputType/getAll",
    saveTemplateWithInputs: "/template/createTemplateWithInput",
    getAllBusiness: "/template/business/getAll",
    getTemplateById: "/template/getById",
    deleteTemplateInput: "/template/deleteTemplateInput",
    getAllTemplate: "/template/getAllTemplates",
    getPending: "/pending",
    sent: "/sent",
    inbox: "/inbox",
    outbox: "/outbox",
    addNote: "/notes",
    deleteNote: "/notes/byId",
    getAllCode: "/getAllCode",
    deleteTemplate: "/template/deleteTemplate",
  },
  resolution: {
    createResolutionMetadat: '/resolution/create',
    createResolutionBlock: '/resolution/createBlock',
    getResolutionById: '/resolution/',
    submit: '/resolution/submit',
    deleteResolutionBlockById: '/resolution/deleteBlockById',
    createNotice: '/resolution/notice/save',
    getResolutionNoticeById: '/resolution/notice/getById',
    getResolutionVersion: '/resolution/getByVersionIdAndBillId?billId=',
    speakerNote: '/speakerNote/resolution',
    memberReading: '/memberReading/resolution',
    updateResolutionSubmitStatus: '/resolution/presentedInSabha/',
    updateResolutionFinalPresent: '/resolution/presentedInSabhaFinal/',
    addToLob: '/speakerNote/uploadToLob',
    speakerNoteById: '/speakerNote',
    viewMemberReading: '/memberReading',
    uploadToLobFinal: '/speakerNote/uploadToLobFinal',
    additionalToSpeakerNote: '/resolution/additionalToSpeakerNote'
  },
  ballot: {
    getListforMembers: '/schedule/lotting/getApprovedLottedBills',
    getListOfBillsMembers: '/bill/chooseList',
    updateBallotResult: '/bill/chooseBill',
    getWonMembers: '/bill/getWonMembers'
  },
  resolutionLottingNotice: {
    create: '/resolution/notice/save',
    getAllNotice: '/resolution/notice/getAll',
    getNoticeById: '/resolution/notice/getById',
    submit: '/resolution/notice/submit',
    accept: '/resolution/notice/accept'
   
  },
  resolutionList: {
    getByBillId: `/resolution/amendment/getByBillId`,
    initialList: `/resolution/amendment/intialList`,
    assignToAssistant: `/resolution/amendment/assignToAssistant`,
    createClauseList: `/resolution/amendment/list`,
    getClauseList: `/resolution/amendment/list`,
    publishList: `/resolution/amendment/list/publish`,
    resubmit:`/file/resubmitFile`,
    getListByNoticeType: `/resolution/amendment/list/all`,
    getPresentedInSabha: '/resolution/getPresentedInSabha',
    getStakeHolderToCode: '/resolution/getStakeHolderToCode'
  }
};
